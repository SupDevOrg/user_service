name: Build and Push Docker Image

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      # 1️⃣ Checkout кода
      - name: Checkout code
        uses: actions/checkout@v4

      # 2️⃣ Вычисляем новый тег
      - name: Extract version
        id: version
        run: |
          # Подтягиваем все теги с удалённого репозитория
          git fetch --tags

          # Берём последний тег вида vX.Y.Z
          TAG=$(git tag -l "v*" --sort=-v:refname | head -n 1)
          if [ -z "$TAG" ]; then
            TAG="v0.0.0"
          fi
          echo "Last tag: $TAG"

          # Разбиваем на мажор, минор, патч
          IFS='.' read -r major minor patch <<<"${TAG#v}"

          # Генерируем следующий тег
          while true; do
            patch=$((patch + 1))
            if [ $patch -ge 10 ]; then
              patch=0
              minor=$((minor + 1))
            fi
            NEW_TAG="v${major}.${minor}.${patch}"

            # Проверяем, существует ли тег на удалённом
            if git ls-remote --tags origin | grep -q "refs/tags/$NEW_TAG"; then
              continue
            else
              break
            fi
          done

          echo "New tag: $NEW_TAG"
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

      # 3️⃣ Настройка Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 4️⃣ Логин в Timeweb Registry
      - name: Login to Timeweb Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      # 5️⃣ Сборка и пуш Docker образа
      - name: Build & Push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.REGISTRY_URL }}/user-service:latest
            ${{ secrets.REGISTRY_URL }}/user-service:${{ steps.version.outputs.new_tag }}

      # 6️⃣ Создание нового git-тега
      - name: Create new git tag
        env:
          TAG: ${{ steps.version.outputs.new_tag }}
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

          if git ls-remote --tags origin | grep -q "refs/tags/$TAG"; then
            echo "Tag $TAG already exists on remote, skipping push"
          else
            git tag $TAG
            git push origin $TAG
          fi
